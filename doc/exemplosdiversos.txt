If someone is still looking for a solution, there is an easy fix:

Go to http://curl.haxx.se/ca/cacert.pem and download the pem file and save in your php installation directory ( make sure while saving it retains the extension and not saved as a text file )

Now, open your php.ini file, scroll to the bottom and add the following line:

[cURL]
curl.cainfo="D:\xampp\php\cacert.pem"
Replace D:\xampp\php\cacert.pem with the actual path.

Courtesy: http://stackoverflow.com/questions/17478283/paypal-access-ssl-certificate-unable-to-get-local-issuer-certificate




//DB::beginTransaction();
//DB::commit();
//DB::rollback();

// private function modelolistagem($codemp, $codsec = null, $codprf = null) {
//
//   $query = DB::table('empfcn as f')
//
//   ->join('cli as c','c.codcli','=','f.codcli')
//
//   ->leftJoin('empsec as tbs', function ($join) {
//       $join->on('tbs.codemp', '=', 'f.codemp')
//            ->on('tbs.codsec', '=', 'f.codsec');
//         })
//
//   ->leftJoin('empprf as tbp', function ($join) {
//       $join->on('tbp.codemp', '=', 'f.codemp')
//            ->on('tbp.codsec', '=', 'f.codsec')
//            ->on('tbp.codprf', '=', 'f.codprf');
//         })
//
//   ->leftJoin('sec as s','s.codsec', '=', 'f.codsec')
//   ->leftJoin('prf as p','p.codprf', '=', 'f.codprf')
//   ->leftJoin('clidet as cd','cd.codcli', '=', 'c.codcli')
//
//   ->select( 'f.codcli'
//              , 'c.nomcli'
//              , 'c.datnsc'
//              , 'c.numcrtidt'
//              , 'cd.endcli'
//              , 'cd.cmpend'
//              , 'cd.nombai'
//              , 'cd.numcep'
//              , 'cd.nomcid'
//              , 'cd.estcli'
//              , 'cd.nomcidnat'
//              , 'cd.estcidnat'
//              , 'cd.numddd'
//              , 'cd.numtel'
//              , 'cd.idtestciv'
//              , 'c.idtsex'
//              , 'f.codemp'
//              , 'f.codsec'
//              , 's.dscsec'
//              , 'f.codprf'
//              , 'p.dscprf'
//              , 'f.idtatv'
//              ,DB::raw("coalesce(tbs.idtatv,'N') as secidtatv")
//              ,DB::raw("coalesce(tbp.idtatv,'N') as prfidtatv")
//            );
//
//   $query = $query->where('f.codemp','=',$codemp);
//
//   if (isset($codsec)){
//     $query = $query->where('f.codsec','=',$codsec);
//   }
//
//   if (isset($codprf)){
//     $query = $query->where('f.codprf','=',$codprf);
//   }
//
//   $query = $query->orderBy('c.nomcli', 'asc');
//
//    $retorno = $query->get();
//    //$retorno = $query->paginate(5); // Paginação com 5 registros por página
//    //dd($retorno);
//    return $retorno;
// }
//dd($query->toSql());
//dd(DB::getQueryLog());
// http://v3.golaravel.com/api/class-Exception.html


//$route = Route::current();
//$name = Route::currentRouteName();
//$action = Route::currentRouteAction();
//$descricao = $request->input('descricao');


/* Retorno de erros de validação
MessageBag {#158
  #messages: array:2 [
    "title" => array:1 [
      0 => "The title field is required."
    ]
    "body" => array:1 [
      0 => "The body field is required."
    ]
  ]
  #format: ":message"
}

*/

//https://laravel.com/api/5.3/index.html
// {data:{rota, mensagem}}
